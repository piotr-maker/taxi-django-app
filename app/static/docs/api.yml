openapi: 3.0.2
info:
  title: 'Taxi app'
  version: '1.0.0'
servers:
  - url: "https://itsolutions.hopto.org/api"
  - url: "http://localhost:8000/api"
    description: "Local server"
tags:
- name: "Authentication"
  description: "Everything about authentication"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
- name: "Order"
  description: "Access to orders"
- name: "User"
  description: "Operations about user"
  externalDocs:
    description: "Find out more about our company"
    url: "http://swagger.io"
paths:
  /orders/:
    get:
      operationId: listOrders
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - "Order"
      security:
      - Token: []
    post:
      operationId: createOrders
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - "Order"
      security:
      - Token: []
  /orders/{order_id}/:
    get:
      operationId: retrieveOrder
      description: ''
      parameters:
      - name: order_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - "Order"
      security:
      - Token: []
    put:
      operationId: updateOrder
      description: ''
      parameters:
      - name: order_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - "Order"
      security:
      - Token: []
    patch:
      operationId: partialUpdateOrder
      description: ''
      parameters:
      - name: order_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - "Order"
      security:
      - Token: []
    delete:
      operationId: destroyOrder
      description: ''
      parameters:
      - name: order_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - "Order"
      security:
      - Token: []
  /users/:
    get:
      operationId: listCustomUsers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
      tags:
      - "User"
      security:
      - Token: []
    post:
      operationId: createCustomUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
      tags:
      - "User"
  /users/me/:
    get:
      operationId: getUserInfo
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - "User"
      security:
      - Token: []
    put:
      operationId: updateUserFields
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - "User"
      security:
      - Token: []
    patch:
      operationId: updateUserField
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - "User"
      security:
      - Token: []
    delete:
      operationId: deleteUserFields
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - "User"
      security:
      - Token: []
  /users/{id}/:
    get:
      operationId: retrieveCustomUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this u\u017Cytkownik."
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - "User"
      security:
      - Token: []
    put:
      operationId: updateCustomUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this u\u017Cytkownik."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - "User"
      security:
      - Token: []
    patch:
      operationId: partialUpdateCustomUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this u\u017Cytkownik."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - "User"
      security:
      - Token: []
    delete:
      operationId: destroyCustomUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this u\u017Cytkownik."
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - "User"
      security:
      - Token: []
  /users/activation/:
    post:
      operationId: activationCustomUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
      tags:
      - "User"
  /api/users/resend_activation/:
    post:
      operationId: resendActivationCustomUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - "User"
  /users/reset_password/:
    post:
      operationId: resetPasswordCustomUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - "User"
  /users/reset_password_confirm/:
    post:
      operationId: resetPasswordConfirmCustomUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
      tags:
      - "User"
  /users/reset_login/:
    post:
      operationId: resetUsernameCustomUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - "User"
  /users/reset_login_confirm/:
    post:
      operationId: resetUsernameConfirmCustomUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
      tags:
      - "User"
  /users/set_password/:
    post:
      operationId: setPasswordCustomUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
      tags:
      - "User"
      security:
      - Token: []
  /users/set_login/:
    post:
      operationId: setUsernameCustomUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
      tags:
      - "User"
      security:
      - Token: []
  /token/login/:
    post:
      operationId: createTokenCreate
      description: Use this endpoint to obtain user authentication token.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenCreate'
          description: ''
      tags:
      - "Authentication"
  /token/logout/:
    post:
      operationId: createTokenDestroy
      description: Use this endpoint to logout user (remove user authentication token).
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - "Authentication"
      security:
      - Token: []

components:
  securitySchemes:
    Token:
      type: "apiKey"
      in: "header"
      name: "Authorization"

  schemas:
    Location:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        longitude:
          type: string
          format: decimal
          multipleOf: 1.0e-06
          maximum: 1000
          minimum: -1000
        latitude:
          type: string
          format: decimal
          multipleOf: 1.0e-06
          maximum: 1000
          minimum: -1000
        altitude:
          type: string
          format: decimal
          multipleOf: 1.0e-06
          maximum: 1000
          minimum: -1000
      required:
      - longitude
      - latitude
      - altitude
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        order_from:
          $ref: "#/components/schemas/Location"
        order_to:
          $ref: "#/components/schemas/Location"
        status:
          enum:
          - NE
          - PR
          - CA
          - CL
          type: string
          readOnly: true
        cost:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 10000
          minimum: -10000
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - order_from
      - order_to
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        login:
          type: string
          description: Required. 30 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 30
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_driver:
          type: boolean
        date_joined:
          type: string
          format: date-time
        last_login:
          type: string
          format: date-time
      required:
      - login
      - first_name
      - last_name
      - is_driver
    UserCreate:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        password:
          type: string
          writeOnly: true
        login:
          type: string
          description: Required. 30 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 30
        id:
          type: integer
          readOnly: true
      required:
      - first_name
      - last_name
      - password
      - login
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - uid
      - token
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - uid
      - token
      - new_password
    UsernameResetConfirm:
      type: object
      properties:
        new_login:
          type: string
          description: Required. 30 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 30
      required:
      - new_login
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - new_password
      - current_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_login:
          type: string
          description: Required. 30 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 30
      required:
      - current_password
      - new_login
    TokenCreate:
      type: object
      properties:
        password:
          type: string
        login:
          type: string
